CMAKE_MINIMUM_REQUIRED(VERSION 3.1.3 FATAL_ERROR)

PROJECT(geodesic_grid_dvr)

SET(SRC_DIR ./src)
SET(HEADER ${SRC_DIR}/dir.h)
SET(SOURCE ${SRC_DIR}/main.cpp
           ${SRC_DIR}/dir.cpp
    )

SET(UTILITY_HEADER ${SRC_DIR}/HostArrayTemplate.h
    ${SRC_DIR}/netcdf_read.h
    ${SRC_DIR}/NetCDFFile.h
    ${SRC_DIR}/NetCDFManager.h
    )

SET(UTILITY_SOURCE 
    ${SRC_DIR}/netcdf_read.cpp
    ${SRC_DIR}/NetCDFFile.cpp
    ${SRC_DIR}/NetCDFManager.cpp
    )

SOURCE_GROUP("utility" FILES ${UTILITY_HEADER} ${UTILITY_SOURCE})

IF(WIN32)
    # hide insecure CRT warnings, common practice
    ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
    
    IF(NOT(MSVC_VERSION LESS "1600"))
        ADD_DEFINITIONS(-D_WIN32_WINNT=0x0601)
        ADD_DEFINITIONS(-DWINVER=0x0601)
    ELSEIF(NOT(MSVC_VERSION LESS "1300"))
        ADD_DEFINITIONS(-D_WIN32_WINNT=0x0501)
        ADD_DEFINITIONS(-DWINVER=0x0501)
    ELSE()
        ADD_DEFINITIONS(-D_WIN32_WINNT=0x0500)
        ADD_DEFINITIONS(-DWINVER=0x0500)
    ENDIF()

ENDIF()

IF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
    MESSAGE( "64 bits compiler detected" )
    SET( PLATFORM_NAME "x64" )
ELSE( CMAKE_SIZEOF_VOID_P EQUAL 8 ) 
    MESSAGE( "32 bits compiler detected" )
    SET( PLATFORM_NAME "x86" )
ENDIF( CMAKE_SIZEOF_VOID_P EQUAL 8 )

IF( CMAKE_BUILD_TYPE STREQUAL "Debug" )
    MESSAGE( "Debug build" )
    SET( CONFIGURATION_NAME "Debug" )
ELSE( CMAKE_BUILD_TYPE STREQUAL "Debug" ) 
    MESSAGE( "Release build" )
    SET( CONFIGURATION_NAME "Release" )
ENDIF( CMAKE_BUILD_TYPE STREQUAL "Debug" )

#Prompt user to specify glew installation root.
SET(GLEW_ROOT_DIR "${CMAKE_CURRENT_SOURCE_DIR}/freeglut-2.8.1" CACHE PATH
    "Please specify glew installation directory")
SET(GLEW_INC_DIR "${GLEW_ROOT_DIR}/include")
SET(GLEW_LIB_DIR "${GLEW_ROOT_DIR}/lib")
SET(GLEW_LIB_DIR2 "${GLEW_LIB_DIR}/${PLATFORM_NAME}")
MESSAGE("glew root dir: ${GLEW_ROOT_DIR}")
MESSAGE("glew possible lib dir: ${GLEW_LIB_DIR}")
MESSAGE("glew possible lib dir: ${GLEW_LIB_DIR2}")

#Prompt user to specify freeglut installation root.
SET(FREEGLUT_ROOT_DIR "${CMAKE_CURRENT_SOURCE_DIR}/freeglut-2.8.1" CACHE PATH
    "Please specify freeglut installation directory")
SET(FREEGLUT_INC_DIR "${FREEGLUT_ROOT_DIR}/include")
SET(FREEGLUT_LIB_DIR "${FREEGLUT_ROOT_DIR}/lib")
SET(FREEGLUT_LIB_DIR2 "${FREEGLUT_LIB_DIR}/${PLATFORM_NAME}")
MESSAGE("freeglut root dir: ${FREEGLUT_ROOT_DIR}")
MESSAGE("freeglut possible lib dir: ${FREEGLUT_LIB_DIR}")
MESSAGE("freeglut possible lib dir: ${FREEGLUT_LIB_DIR2}")
MESSAGE("freeglut bin dir: ${FREEGLUT_BIN_DIR}")

#Prompt user to specify netcdf installation root.
SET(NETCDF_ROOT_DIR "${CMAKE_CURRENT_SOURCE_DIR}/netcdf" CACHE PATH
    "Please specify NETCDF installation directory")
SET(NETCDF_INC_DIR "${NETCDF_ROOT_DIR}/include")
SET(NETCDF_LIB_DIR "${NETCDF_ROOT_DIR}/lib")
SET(NETCDF_LIB_DIR2 "${NETCDF_LIB_DIR}/${PLATFORM_NAME}")
MESSAGE("NETCDF root dir: ${NETCDF_ROOT_DIR}")
MESSAGE("NETCDF possible lib dir: ${NETCDF_LIB_DIR}")
MESSAGE("NETCDF possible lib dir: ${NETCDF_LIB_DIR2}")

SET(DAVINCI_ROOT_DIR "${CMAKE_CURRENT_SOURCE_DIR}/freeglut-2.8.1" CACHE PATH
    "Please specify DAVINCI installation directory")
SET(DAVINCI_INC_DIR "${DAVINCI_ROOT_DIR}/include")
SET(DAVINCI_LIB_DIR "${DAVINCI_ROOT_DIR}/lib")
SET(DAVINCI_LIB_DIR2 "${DAVINCI_LIB_DIR}/${PLATFORM_NAME}")
MESSAGE("DAVINCI root dir: ${DAVINCI_ROOT_DIR}")
MESSAGE("DAVINCI include dir: ${DAVINCI_INC_DIR}")
MESSAGE("DAVINCI possible lib dir: ${DAVINCI_LIB_DIR}")
MESSAGE("DAVINCI possible lib dir: ${DAVINCI_LIB_DIR2}")

INCLUDE_DIRECTORIES(
${GLEW_INC_DIR}
${FREEGLUT_INC_DIR}
${NETCDF_INC_DIR}
${DAVINCI_INC_DIR}
)

LINK_DIRECTORIES(
${GLEW_LIB_DIR}
${GLEW_LIB_DIR}/${PLATFORM_NAME}
${FREEGLUT_LIB_DIR}
${FREEGLUT_LIB_DIR2}
${NETCDF_LIB_DIR}
${NETCDF_LIB_DIR2}
${DAVINCI_LIB_DIR}
${DAVINCI_LIB_DIR2}
)

ADD_EXECUTABLE(${PROJECT_NAME} ${HEADER} ${SOURCE} ${UTILITY_HEADER} ${UTILITY_SOURCE})

TARGET_LINK_LIBRARIES(${PROJECT_NAME} Davinci glew freeglut netcdf)